/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package grafos_jair2;


import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.Ellipse2D;
import java.util.ArrayList;

/**
 *
 * @author PERSONAL
 */
public class Lienzo1 extends javax.swing.JPanel {

    /**
     * Creates new form LienzoPrueba1
     */
    DatosEstacion datosEstacion;
    Grafo estaciones;
    Estacion estacionSeleccionada;
    public static final int DIAMETRO = 30;
    int[][] AdyacenciaST;
    
    

     /*
       public void setParametros(DatosEstacion datosEstacion, int[][] AdyacenciaST) {
        this.datosEstacion = datosEstacion;
        this.AdyacenciaST=AdyacenciaST;
        repaint();
    }*/
       
       @Override
    public void paint(Graphics g) {
        super.paint(g); //To change body of generated methods, choose Tools | Templates.

        Graphics2D g2 = (Graphics2D) g;

        if (datosEstacion != null) {
            int i=0;
            for (Estacion esta : datosEstacion.getEstaciones()) {
                Ellipse2D elipse = esta.getForma();
                if (elipse == null) {
                    elipse = new Ellipse2D.Double(30+(i*5), 30+(i*35),
                            DIAMETRO + 50,
                            DIAMETRO);
                    esta.setForma(elipse);
                    
                }
                g2.draw(elipse);
              i++;
            }
        }
        //Aqui va lo de pintar las lineas
        
        int [][]matrizAdy=datosEstacion.getGrafo().getMatrizAdy();
        for(int i=0;i<matrizAdy.length;i++){
            for(int j=0;j<matrizAdy.length;j++){
                int ady=matrizAdy[i][j];
                
                if(ady!=0){
                    Estacion estacion1=datosEstacion.getEstacion(i);
                    Estacion estacion2=datosEstacion.getEstacion(j);
                   Double x1=estacion1.getForma().getCenterX();
                   Double y1=estacion1.getForma().getCenterY();
                   Double x2=estacion2.getForma().getCenterX();
                   Double y2=estacion2.getForma().getCenterY();
                   
        g2.setColor(Color.darkGray);           
        g2.drawLine(x1.intValue(),y1.intValue(),x2.intValue(),y2.intValue());
        g2.setColor(Color.red);
       
        
        g2.setColor(Color.BLUE);
        g2.drawString(" (Est. "+estacion1.getId()+")", x1.intValue()-15, y1.intValue()+DIAMETRO);
        g2.drawString(" (Est. "+estacion2.getId()+")", x2.intValue()-15, y2.intValue()+DIAMETRO);
        
        g2.setColor(Color.RED);
        g2.drawString(" <"+datosEstacion.getGrafo().getNecesidadesEstaciones()[i]+">", x1.intValue()-12, y1.intValue()+12);
        g2.drawString(" <"+datosEstacion.getGrafo().getNecesidadesEstaciones()[j]+">", x2.intValue()-12, y2.intValue()+12);
                }
            }
        }
        
    }
       
    public Lienzo1() {
        initComponents();
        //this.AdyacenciaST=datosEstacion.getGrafo().getMatrizAdy();
        
         setBorder(javax.swing.BorderFactory.createTitledBorder("Estaciones"));
        setAutoscrolls(true);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
       
        
       
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 388, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 277, Short.MAX_VALUE)
        );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
    
        if (estacionSeleccionada != null) {
            Ellipse2D elipse = new Ellipse2D.Double(evt.getX(), evt.getY(),
                    DIAMETRO + 50,
                    DIAMETRO);
            estacionSeleccionada.setForma(elipse);
        }
        repaint();
    }//GEN-LAST:event_formMouseDragged

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
          
        
        for (Estacion estacion : datosEstacion.getEstaciones()) {
            Ellipse2D figura = estacion.getForma();
            System.out.println("evaluando " + figura);
            if (figura.contains(evt.getX(), evt.getY())) {
                
                Graphics2D g2 = (Graphics2D) this.getGraphics();
                
                g2.setPaint(Color.red);
                g2.fill(figura);
                estacionSeleccionada = estacion;
                               
                break;
            }
        }
    }//GEN-LAST:event_formMousePressed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        // TODO add your handling code here:
        estacionSeleccionada = null;
    }//GEN-LAST:event_formMouseReleased


    public void setEstaciones(Grafo estaciones) {
        this.estaciones = estaciones;
    }

    public void setAdyacenciaST(int[][] AdyacenciaST) {
        this.AdyacenciaST = AdyacenciaST;
    }

    public void setDatosEstacion(DatosEstacion datosEstacion) {
        this.datosEstacion = datosEstacion;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
